# Generated by Django 3.0.4 on 2020-03-07 02:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Respuesta')),
                ('correct', models.BooleanField(default=False, verbose_name='Respuesta correcta')),
            ],
            options={
                'verbose_name': 'answer',
                'verbose_name_plural': 'answers',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nombre')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('update_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de actualización')),
                ('depends_on', models.ForeignKey(help_text='El curso depende de otro curso para ser cursado ', on_delete=django.db.models.deletion.CASCADE, to='core.Course', verbose_name='Depende de')),
            ],
            options={
                'verbose_name': 'course',
                'verbose_name_plural': 'courses',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nombre')),
                ('score_total', models.PositiveSmallIntegerField(help_text='Puntuación a mínima a calificar', verbose_name='Puntuación')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Course', verbose_name='Curso')),
                ('depends_on', models.ForeignKey(help_text='La lección depende de otra lección', on_delete=django.db.models.deletion.CASCADE, to='core.Lesson', verbose_name='Depende de')),
            ],
            options={
                'verbose_name': 'lesson',
                'verbose_name_plural': 'lessons',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Pregunta')),
                ('score', models.PositiveSmallIntegerField(verbose_name='Score')),
                ('tipo', models.CharField(choices=[('1', 'Si/No - Verdadero/Falso'), ('2', 'Opción múltiple. Una respuesta correcta'), ('3', 'Opción múltiple. Varias respuestas correctas'), ('4', 'Opción múltiple. Todas las respuestas son correctas')], max_length=50, verbose_name='Tipo')),
                ('answers', models.ManyToManyField(help_text='Conjunto de respuestas', related_name='questions', to='core.Answer', verbose_name='Respuestas')),
            ],
            options={
                'verbose_name': 'question',
                'verbose_name_plural': 'questions',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Nombre')),
                ('last_name', models.CharField(max_length=50, verbose_name='Apellido')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.User')),
            ],
            options={
                'verbose_name': 'student',
                'verbose_name_plural': 'students',
            },
            bases=('core.user',),
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.User')),
            ],
            options={
                'verbose_name': 'teacher',
                'verbose_name_plural': 'teachers',
            },
            bases=('core.user',),
        ),
        migrations.CreateModel(
            name='StudentQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correct_question', models.BooleanField(help_text='Indica si la pregunta fue contestada correctamente', verbose_name='Pregunta correcta')),
                ('answers', models.ManyToManyField(help_text='Respuestas que seleccionó', to='core.Answer', verbose_name='Respuestas')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Question', verbose_name='Pregunta')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Student', verbose_name='Estudiante')),
            ],
            options={
                'verbose_name': 'StudentQuestion',
                'verbose_name_plural': 'StudentQuestions',
            },
        ),
        migrations.CreateModel(
            name='StudentLesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approved', models.BooleanField(default=False, verbose_name='Aprobado')),
                ('current_date', models.DateTimeField(auto_now_add=True, help_text='Fecha que se tomó', verbose_name='Fecha tomada')),
                ('lesson', models.ForeignKey(help_text='Lección tomada', on_delete=django.db.models.deletion.CASCADE, to='core.Lesson', verbose_name='Lección')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Student', verbose_name='Estudiante')),
            ],
            options={
                'verbose_name': 'studentlesson',
                'verbose_name_plural': 'studentlessons',
            },
        ),
        migrations.CreateModel(
            name='StudentCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approved', models.BooleanField(help_text='Indica si el curso fue aprobado', verbose_name='Aprobado')),
                ('current_date', models.DateTimeField(auto_now_add=True, help_text='Fecha que se tomó el curso', verbose_name='Fecha tomada')),
                ('last_current', models.DateTimeField(help_text='Última vez que entró al curso', verbose_name='Actualización')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Course', verbose_name='Curso')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Student', verbose_name='Estudiante')),
            ],
            options={
                'verbose_name': 'studentcourse',
                'verbose_name_plural': 'studentcourses',
            },
        ),
        migrations.AddField(
            model_name='student',
            name='courses',
            field=models.ManyToManyField(help_text='Cursos tomados', related_name='students', through='core.StudentCourse', to='core.Course', verbose_name='Cursos tomados'),
        ),
        migrations.AddField(
            model_name='student',
            name='lessons',
            field=models.ManyToManyField(help_text='Lecciones tomadas', related_name='students', through='core.StudentLesson', to='core.Lesson', verbose_name='Lecciones tomadas'),
        ),
        migrations.AddField(
            model_name='student',
            name='questions',
            field=models.ManyToManyField(help_text='Muestra todas las preguntas contestadas por el estudiante', related_name='students', to='core.Question', verbose_name='Preguntas respondidas'),
        ),
        migrations.AddField(
            model_name='course',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Teacher', verbose_name='Profesor'),
        ),
    ]
